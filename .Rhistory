#contigious.draft
#base.genome.scaffolds.headers
mutation.indices <- sample(1:nchar(contigious.draft), mutation.numbers)
for (i in 1:mutation.numbers)
substr(contigious.draft[i], mutation.indices[i], mutation.indices[i]) <- mutate(substr(contigious.draft[i], mutation.indices[i], mutation.indices[i]))
generate_scaffolds(contigious.draft, base.genome.scaffolds.length, paste0("Mutated_draf_v",draft.vesion),"../")
}
mutate_draft(onelinedata, 1, 100, 1)
mutate_draft <- function(base.genome, drafts.number, mutation.numbers, draft.vesion){
base.genome <- read.delim("./Data/simulated_scaffolds.txt", sep = "\n", header = FALSE)
base.genome.scaffolds <- as.character(base.genome$V1)
base.genome.scaffolds.headers <- base.genome.scaffolds[grep(">",base.genome.scaffolds)]
base.genome.scaffolds.sequences <- base.genome.scaffolds[-grep(">",base.genome.scaffolds)]
base.genome.scaffolds.length <- nchar(base.genome.scaffolds)
contigious.draft <- paste0(base.genome.scaffolds.sequences,collapse = '')
#contigious.draft
#base.genome.scaffolds.headers
mutation.indices <- sample(1:nchar(contigious.draft), mutation.numbers)
for (i in 1:mutation.numbers)
substr(contigious.draft[i], mutation.indices[i], mutation.indices[i]) <- mutate(substr(contigious.draft[i], mutation.indices[i], mutation.indices[i]))
generate_scaffolds(contigious.draft, base.genome.scaffolds.length, "DjMutatedScaffold: ",paste0("Mutated_draf_v",draft.vesion),"../")
}
mutate_draft(onelinedata, 1, 100, 1)
mutate_draft <- function(base.genome, drafts.number, mutation.numbers, draft.vesion){
base.genome <- read.delim("./Data/simulated_scaffolds.txt", sep = "\n", header = FALSE)
base.genome.scaffolds <- as.character(base.genome$V1)
base.genome.scaffolds.headers <- base.genome.scaffolds[grep(">",base.genome.scaffolds)]
base.genome.scaffolds.sequences <- base.genome.scaffolds[-grep(">",base.genome.scaffolds)]
base.genome.scaffolds.length <- nchar(base.genome.scaffolds.sequences)
contigious.draft <- paste0(base.genome.scaffolds.sequences,collapse = '')
#contigious.draft
#base.genome.scaffolds.headers
mutation.indices <- sample(1:nchar(contigious.draft), mutation.numbers)
for (i in 1:mutation.numbers)
substr(contigious.draft[i], mutation.indices[i], mutation.indices[i]) <- mutate(substr(contigious.draft[i], mutation.indices[i], mutation.indices[i]))
generate_scaffolds(contigious.draft, base.genome.scaffolds.length, "DjMutatedScaffold: ",paste0("Mutated_draf_v",draft.vesion),"../")
}
mutate_draft(onelinedata, 1, 100, 1)
getwd()
mutate_draft <- function(base.genome, drafts.number, mutation.numbers, draft.vesion){
base.genome <- read.delim("./Data/simulated_scaffolds.txt", sep = "\n", header = FALSE)
base.genome.scaffolds <- as.character(base.genome$V1)
base.genome.scaffolds.headers <- base.genome.scaffolds[grep(">",base.genome.scaffolds)]
base.genome.scaffolds.sequences <- base.genome.scaffolds[-grep(">",base.genome.scaffolds)]
base.genome.scaffolds.length <- nchar(base.genome.scaffolds.sequences)
contigious.draft <- paste0(base.genome.scaffolds.sequences,collapse = '')
#contigious.draft
#base.genome.scaffolds.headers
mutation.indices <- sample(1:nchar(contigious.draft), mutation.numbers)
for (i in 1:mutation.numbers)
substr(contigious.draft[i], mutation.indices[i], mutation.indices[i]) <- mutate(substr(contigious.draft[i], mutation.indices[i], mutation.indices[i]))
generate_scaffolds(contigious.draft, base.genome.scaffolds.length, "DjMutatedScaffold: ",paste0("Mutated_draf_v",draft.vesion),"./Data/Mutation_generation/")
}
mutate_draft(onelinedata, 1, 100, 1)
mutate_draft <- function(base.genome, drafts.number, mutation.numbers, draft.vesion){
base.genome <- read.delim("./Data/simulated_scaffolds.txt", sep = "\n", header = FALSE)
base.genome.scaffolds <- as.character(base.genome$V1)
base.genome.scaffolds.headers <- base.genome.scaffolds[grep(">",base.genome.scaffolds)]
base.genome.scaffolds.sequences <- base.genome.scaffolds[-grep(">",base.genome.scaffolds)]
base.genome.scaffolds.length <- nchar(base.genome.scaffolds.sequences)
contigious.draft <- paste0(base.genome.scaffolds.sequences,collapse = '')
#contigious.draft
#base.genome.scaffolds.headers
mutation.indices <- sample(1:nchar(contigious.draft), mutation.numbers)
for (i in 1:mutation.numbers) {
substr(contigious.draft[i], mutation.indices[i], mutation.indices[i]) <- mutate(substr(contigious.draft[i], mutation.indices[i], mutation.indices[i]))
}
generate_scaffolds(contigious.draft, base.genome.scaffolds.length, "DjMutatedScaffold: ",paste0("Mutated_draf_v",draft.vesion),"./Data/Mutation_generation/")
}
mutate_draft(onelinedata, 1, 100, 1)
mutate_draft <- function(base.genome, drafts.number, mutation.numbers, draft.vesion){
base.genome <- read.delim("./Data/simulated_scaffolds.txt", sep = "\n", header = FALSE)
base.genome.scaffolds <- as.character(base.genome$V1)
base.genome.scaffolds.headers <- base.genome.scaffolds[grep(">",base.genome.scaffolds)]
base.genome.scaffolds.sequences <- base.genome.scaffolds[-grep(">",base.genome.scaffolds)]
base.genome.scaffolds.length <- nchar(base.genome.scaffolds.sequences)
print("--------")
print(base.genome.scaffolds.length)
contigious.draft <- paste0(base.genome.scaffolds.sequences,collapse = '')
#contigious.draft
#base.genome.scaffolds.headers
mutation.indices <- sample(1:nchar(contigious.draft), mutation.numbers)
for (i in 1:mutation.numbers) {
substr(contigious.draft[i], mutation.indices[i], mutation.indices[i]) <- mutate(substr(contigious.draft[i], mutation.indices[i], mutation.indices[i]))
}
generate_scaffolds(contigious.draft, base.genome.scaffolds.length, "DjMutatedScaffold: ",paste0("Mutated_draf_v",draft.vesion),"./Data/Mutation_generation/")
}
mutate_draft(onelinedata, 1, 100, 1)
generate_scaffolds(onelinedata,get_scaffolds_size(2100, 450, 0.2),"test","sexttest","./Data/")
typeof(onelinedata)
mutate_draft <- function(base.genome, drafts.number, mutation.numbers, draft.vesion){
base.genome <- read.delim("./Data/simulated_scaffolds.txt", sep = "\n", header = FALSE)
base.genome.scaffolds <- as.character(base.genome$V1)
base.genome.scaffolds.headers <- base.genome.scaffolds[grep(">",base.genome.scaffolds)]
base.genome.scaffolds.sequences <- base.genome.scaffolds[-grep(">",base.genome.scaffolds)]
base.genome.scaffolds.length <- nchar(base.genome.scaffolds.sequences)
print("--------")
print(base.genome.scaffolds.length)
contigious.draft <- paste0(base.genome.scaffolds.sequences,collapse = '')
#contigious.draft
#base.genome.scaffolds.headers
mutation.indices <- sample(1:nchar(contigious.draft), mutation.numbers)
for (i in 1:mutation.numbers) {
substr(contigious.draft[i], mutation.indices[i], mutation.indices[i]) <- mutate(substr(contigious.draft[i], mutation.indices[i], mutation.indices[i]))
}
typeof(contigious.draft)
generate_scaffolds(contigious.draft, base.genome.scaffolds.length, "DjMutatedScaffold: ",paste0("Mutated_draf_v",draft.vesion),"./Data/Mutation_generation/")
}
mutate_draft(onelinedata, 1, 100, 1)
mutate_draft <- function(base.genome, drafts.number, mutation.numbers, draft.vesion){
base.genome <- read.delim("./Data/simulated_scaffolds.txt", sep = "\n", header = FALSE)
base.genome.scaffolds <- as.character(base.genome$V1)
base.genome.scaffolds.headers <- base.genome.scaffolds[grep(">",base.genome.scaffolds)]
base.genome.scaffolds.sequences <- base.genome.scaffolds[-grep(">",base.genome.scaffolds)]
base.genome.scaffolds.length <- nchar(base.genome.scaffolds.sequences)
print("--------")
print(base.genome.scaffolds.length)
contigious.draft <- paste0(base.genome.scaffolds.sequences,collapse = '')
#contigious.draft
#base.genome.scaffolds.headers
mutation.indices <- sample(1:nchar(contigious.draft), mutation.numbers)
for (i in 1:mutation.numbers) {
substr(contigious.draft[i], mutation.indices[i], mutation.indices[i]) <- mutate(substr(contigious.draft[i], mutation.indices[i], mutation.indices[i]))
}
print(typeof(contigious.draft))
generate_scaffolds(contigious.draft, base.genome.scaffolds.length, "DjMutatedScaffold: ",paste0("Mutated_draf_v",draft.vesion),"./Data/Mutation_generation/")
}
mutate_draft(onelinedata, 1, 100, 1)
length(onelinedata)
mutate_draft <- function(base.genome, drafts.number, mutation.numbers, draft.vesion){
base.genome <- read.delim("./Data/simulated_scaffolds.txt", sep = "\n", header = FALSE)
base.genome.scaffolds <- as.character(base.genome$V1)
base.genome.scaffolds.headers <- base.genome.scaffolds[grep(">",base.genome.scaffolds)]
base.genome.scaffolds.sequences <- base.genome.scaffolds[-grep(">",base.genome.scaffolds)]
base.genome.scaffolds.length <- nchar(base.genome.scaffolds.sequences)
print("--------")
print(base.genome.scaffolds.length)
contigious.draft <- paste0(base.genome.scaffolds.sequences,collapse = '')
#contigious.draft
#base.genome.scaffolds.headers
mutation.indices <- sample(1:nchar(contigious.draft), mutation.numbers)
for (i in 1:mutation.numbers) {
substr(contigious.draft[i], mutation.indices[i], mutation.indices[i]) <- mutate(substr(contigious.draft[i], mutation.indices[i], mutation.indices[i]))
}
print(typeof(contigious.draft))
print(length(contigious.draft))
generate_scaffolds(contigious.draft, base.genome.scaffolds.length, "DjMutatedScaffold: ",paste0("Mutated_draf_v",draft.vesion),"./Data/Mutation_generation/")
}
mutate_draft(onelinedata, 1, 100, 1)
mutate_draft <- function(base.genome, drafts.number, mutation.numbers, draft.vesion){
base.genome <- read.delim("./Data/simulated_scaffolds.txt", sep = "\n", header = FALSE)
base.genome.scaffolds <- as.character(base.genome$V1)
base.genome.scaffolds.headers <- base.genome.scaffolds[grep(">",base.genome.scaffolds)]
base.genome.scaffolds.sequences <- base.genome.scaffolds[-grep(">",base.genome.scaffolds)]
base.genome.scaffolds.length <- nchar(base.genome.scaffolds.sequences)
print("--------")
print(base.genome.scaffolds.length)
contigious.draft <- paste(base.genome.scaffolds.sequences)
#contigious.draft
#base.genome.scaffolds.headers
mutation.indices <- sample(1:nchar(contigious.draft), mutation.numbers)
for (i in 1:mutation.numbers) {
substr(contigious.draft[i], mutation.indices[i], mutation.indices[i]) <- mutate(substr(contigious.draft[i], mutation.indices[i], mutation.indices[i]))
}
print(typeof(contigious.draft))
print(length(contigious.draft))
generate_scaffolds(contigious.draft, base.genome.scaffolds.length, "DjMutatedScaffold: ",paste0("Mutated_draf_v",draft.vesion),"./Data/Mutation_generation/")
}
mutate_draft(onelinedata, 1, 100, 1)
mutate_draft <- function(base.genome, drafts.number, mutation.numbers, draft.vesion){
base.genome <- read.delim("./Data/simulated_scaffolds.txt", sep = "\n", header = FALSE)
base.genome.scaffolds <- as.character(base.genome$V1)
base.genome.scaffolds.headers <- base.genome.scaffolds[grep(">",base.genome.scaffolds)]
base.genome.scaffolds.sequences <- base.genome.scaffolds[-grep(">",base.genome.scaffolds)]
base.genome.scaffolds.length <- nchar(base.genome.scaffolds.sequences)
print("--------")
print(base.genome.scaffolds.length)
contigious.draft <- paste(base.genome.scaffolds.sequences)
#contigious.draft
#base.genome.scaffolds.headers
mutation.indices <- sample(1:nchar(contigious.draft), mutation.numbers)
for (i in 1:mutation.numbers) {
substr(contigious.draft[i], mutation.indices[i], mutation.indices[i]) <- mutate(substr(contigious.draft[i], mutation.indices[i], mutation.indices[i]))
}
print(typeof(contigious.draft))
print(length(contigious.draft))
generate_scaffolds(onelinedata, base.genome.scaffolds.length, "DjMutatedScaffold: ",paste0("Mutated_draf_vv",draft.vesion),"./Data/Mutation_generation/")
}
mutate_draft(onelinedata, 1, 100, 1)
mutate_draft <- function(base.genome, drafts.number, mutation.numbers, draft.vesion){
base.genome <- read.delim("./Data/simulated_scaffolds.txt", sep = "\n", header = FALSE)
base.genome.scaffolds <- as.character(base.genome$V1)
base.genome.scaffolds.headers <- base.genome.scaffolds[grep(">",base.genome.scaffolds)]
base.genome.scaffolds.sequences <- base.genome.scaffolds[-grep(">",base.genome.scaffolds)]
base.genome.scaffolds.length <- nchar(base.genome.scaffolds.sequences)
print("--------")
print(base.genome.scaffolds.length)
contigious.draft <- as.character(paste(base.genome.scaffolds.sequences))
#contigious.draft
#base.genome.scaffolds.headers
mutation.indices <- sample(1:nchar(contigious.draft), mutation.numbers)
for (i in 1:mutation.numbers) {
substr(contigious.draft[i], mutation.indices[i], mutation.indices[i]) <- mutate(substr(contigious.draft[i], mutation.indices[i], mutation.indices[i]))
}
print(typeof(contigious.draft))
print(length(contigious.draft))
generate_scaffolds(contigious.draft, base.genome.scaffolds.length, "DjMutatedScaffold: ",paste0("Mutated_draf_v",draft.vesion),"./Data/Mutation_generation/")
}
mutate_draft(onelinedata, 1, 100, 1)
sample(1,4,1)
sample(1:4,1)
sample(1:4,1)
sample(1:4,1)
mutate_draft <- function(base.genome, drafts.number, mutation.numbers, draft.vesion){
base.genome <- read.delim("./Data/simulated_scaffolds.txt", sep = "\n", header = FALSE)
base.genome.scaffolds <- as.character(base.genome$V1)
base.genome.scaffolds.headers <- base.genome.scaffolds[grep(">",base.genome.scaffolds)]
base.genome.scaffolds.sequences <- base.genome.scaffolds[-grep(">",base.genome.scaffolds)]
base.genome.scaffolds.length <- nchar(base.genome.scaffolds.sequences)
print("--------")
print(base.genome.scaffolds.length)
contigious.draft <- as.character(paste(base.genome.scaffolds.sequences))
#contigious.draft
#base.genome.scaffolds.headers
mutation.indices <- sample(1:nchar(contigious.draft), mutation.numbers)
print(mutation.indices)
for (i in 1:mutation.numbers) {
substr(contigious.draft[i], mutation.indices[i], mutation.indices[i]) <- mutate(substr(contigious.draft[i], mutation.indices[i], mutation.indices[i]))
}
print(typeof(contigious.draft))
print(length(contigious.draft))
generate_scaffolds(contigious.draft, base.genome.scaffolds.length, "DjMutatedScaffold: ",paste0("Mutated_draf_v",draft.vesion),"./Data/Mutation_generation/")
}
mutate_draft(onelinedata, 1, 100, 1)
mutate_draft <- function(base.genome, drafts.number, mutation.numbers, draft.vesion){
base.genome <- read.delim("./Data/simulated_scaffolds.txt", sep = "\n", header = FALSE)
base.genome.scaffolds <- as.character(base.genome$V1)
base.genome.scaffolds.headers <- base.genome.scaffolds[grep(">",base.genome.scaffolds)]
base.genome.scaffolds.sequences <- base.genome.scaffolds[-grep(">",base.genome.scaffolds)]
base.genome.scaffolds.length <- nchar(base.genome.scaffolds.sequences)
print("--------")
print(base.genome.scaffolds.length)
contigious.draft <- as.character(paste(base.genome.scaffolds.sequences))
#contigious.draft
#base.genome.scaffolds.headers
print(nchar(contigious.draft))
mutation.indices <- sample(1:nchar(contigious.draft), mutation.numbers)
print(mutation.indices)
for (i in 1:mutation.numbers) {
substr(contigious.draft[i], mutation.indices[i], mutation.indices[i]) <- mutate(substr(contigious.draft[i], mutation.indices[i], mutation.indices[i]))
}
print(typeof(contigious.draft))
print(length(contigious.draft))
generate_scaffolds(contigious.draft, base.genome.scaffolds.length, "DjMutatedScaffold: ",paste0("Mutated_draf_v",draft.vesion),"./Data/Mutation_generation/")
}
mutate_draft(onelinedata, 1, 100, 1)
mutate_draft <- function(base.genome, drafts.number, mutation.numbers, draft.vesion){
base.genome <- read.delim("./Data/simulated_scaffolds.txt", sep = "\n", header = FALSE)
base.genome.scaffolds <- as.character(base.genome$V1)
base.genome.scaffolds.headers <- base.genome.scaffolds[grep(">",base.genome.scaffolds)]
base.genome.scaffolds.sequences <- base.genome.scaffolds[-grep(">",base.genome.scaffolds)]
base.genome.scaffolds.length <- nchar(base.genome.scaffolds.sequences)
print("--------")
print(base.genome.scaffolds.length)
contigious.draft <- as.character(paste0(base.genome.scaffolds.sequences,collapse = ''))
print(contigious.draft)
#contigious.draft
#base.genome.scaffolds.headers
print(nchar(contigious.draft))
mutation.indices <- sample(1:nchar(contigious.draft), mutation.numbers)
print(mutation.indices)
for (i in 1:mutation.numbers) {
substr(contigious.draft[i], mutation.indices[i], mutation.indices[i]) <- mutate(substr(contigious.draft[i], mutation.indices[i], mutation.indices[i]))
}
print(typeof(contigious.draft))
print(length(contigious.draft))
generate_scaffolds(contigious.draft, base.genome.scaffolds.length, "DjMutatedScaffold: ",paste0("Mutated_draf_v",draft.vesion),"./Data/Mutation_generation/")
}
mutate_draft(onelinedata, 1, 100, 1)
contigious.draft <- contigious.draft[1]
mutate_draft <- function(base.genome, drafts.number, mutation.numbers, draft.vesion){
base.genome <- read.delim("./Data/simulated_scaffolds.txt", sep = "\n", header = FALSE)
base.genome.scaffolds <- as.character(base.genome$V1)
base.genome.scaffolds.headers <- base.genome.scaffolds[grep(">",base.genome.scaffolds)]
base.genome.scaffolds.sequences <- base.genome.scaffolds[-grep(">",base.genome.scaffolds)]
base.genome.scaffolds.length <- nchar(base.genome.scaffolds.sequences)
print("--------")
print(base.genome.scaffolds.length)
contigious.draft <- as.character(paste0(base.genome.scaffolds.sequences,collapse = ''))
contigious.draft <- contigious.draft[1]
print(contigious.draft)
#contigious.draft
#base.genome.scaffolds.headers
print(nchar(contigious.draft))
mutation.indices <- sample(1:nchar(contigious.draft), mutation.numbers)
print(mutation.indices)
for (i in 1:mutation.numbers) {
substr(contigious.draft[i], mutation.indices[i], mutation.indices[i]) <- mutate(substr(contigious.draft[i], mutation.indices[i], mutation.indices[i]))
}
print(typeof(contigious.draft))
print(length(contigious.draft))
generate_scaffolds(contigious.draft, base.genome.scaffolds.length, "DjMutatedScaffold: ",paste0("Mutated_draf_v",draft.vesion),"./Data/Mutation_generation/")
}
mutate_draft(onelinedata, 1, 100, 1)
mutate_draft(onelinedata, 1, 150, 1)
mutate_draft <- function(base.genome, drafts.number, mutation.numbers, draft.vesion){
base.genome <- read.delim("./Data/simulated_scaffolds.txt", sep = "\n", header = FALSE)
base.genome.scaffolds <- as.character(base.genome$V1)
base.genome.scaffolds.headers <- base.genome.scaffolds[grep(">",base.genome.scaffolds)]
base.genome.scaffolds.sequences <- base.genome.scaffolds[-grep(">",base.genome.scaffolds)]
base.genome.scaffolds.length <- nchar(base.genome.scaffolds.sequences)
print("--------")
print(base.genome.scaffolds.length)
contigious.draft <- as.character(paste0(base.genome.scaffolds.sequences,collapse = ''))
contigious.draft <- contigious.draft[1]
print(contigious.draft)
#contigious.draft
#base.genome.scaffolds.headers
print(nchar(contigious.draft))
mutation.indices <- sample(1:nchar(contigious.draft), mutation.numbers)
print(mutation.indices)
for (i in 1:mutation.numbers) {
substr(contigious.draft[i], mutation.indices[i], mutation.indices[i]) <- mutate(substr(contigious.draft[i], mutation.indices[i], mutation.indices[i]))
}
print(typeof(contigious.draft))
print(length(contigious.draft))
print(">>>contigious")
print(contigious.draft)
generate_scaffolds(contigious.draft, base.genome.scaffolds.length, "DjMutatedScaffold: ",paste0("Mutated_draf_v",draft.vesion),"./Data/Mutation_generation/")
}
mutate_draft(onelinedata, 1, 150, 1)
mutate_draft <- function(base.genome, drafts.number, mutation.numbers, draft.vesion){
base.genome <- read.delim("./Data/simulated_scaffolds.txt", sep = "\n", header = FALSE)
base.genome.scaffolds <- as.character(base.genome$V1)
base.genome.scaffolds.headers <- base.genome.scaffolds[grep(">",base.genome.scaffolds)]
base.genome.scaffolds.sequences <- base.genome.scaffolds[-grep(">",base.genome.scaffolds)]
base.genome.scaffolds.length <- nchar(base.genome.scaffolds.sequences)
print("--------")
print(base.genome.scaffolds.length)
contigious.draft <- as.character(paste0(base.genome.scaffolds.sequences,collapse = ''))
contigious.draft <- contigious.draft[1]
print(contigious.draft)
#contigious.draft
#base.genome.scaffolds.headers
print(nchar(contigious.draft))
mutation.indices <- sample(1:nchar(contigious.draft), mutation.numbers)
print(mutation.indices)
# for (i in 1:mutation.numbers) {
#   substr(contigious.draft[i], mutation.indices[i], mutation.indices[i]) <- mutate(substr(contigious.draft[i], mutation.indices[i], mutation.indices[i]))
# }
print(typeof(contigious.draft))
print(length(contigious.draft))
print(">>>contigious")
print(contigious.draft)
generate_scaffolds(contigious.draft, base.genome.scaffolds.length, "DjMutatedScaffold: ",paste0("Mutated_draf_v",draft.vesion),"./Data/Mutation_generation/")
}
mutate_draft(onelinedata, 1, 150, 1)
base.genome <- read.delim("./Data/simulated_scaffolds.txt", sep = "\n", header = FALSE)
base.genome.scaffolds <- as.character(base.genome$V1)
base.genome.scaffolds.headers <- base.genome.scaffolds[grep(">",base.genome.scaffolds)]
base.genome.scaffolds.sequences <- base.genome.scaffolds[-grep(">",base.genome.scaffolds)]
base.genome.scaffolds.length <- nchar(base.genome.scaffolds.sequences)
contigious.draft <- as.character(paste0(base.genome.scaffolds.sequences,collapse = ''))
contigious.draft
contigious.draft <- contigious.draft[1]
contigious.draft <- contigious.draft[1]
contigious.draft
typeof(contigious.draft)
substr(contigious.draft,3,3)
mutate_draft <- function(base.genome, drafts.number, mutation.numbers, draft.vesion){
base.genome <- read.delim("./Data/simulated_scaffolds.txt", sep = "\n", header = FALSE)
base.genome.scaffolds <- as.character(base.genome$V1)
base.genome.scaffolds.headers <- base.genome.scaffolds[grep(">",base.genome.scaffolds)]
base.genome.scaffolds.sequences <- base.genome.scaffolds[-grep(">",base.genome.scaffolds)]
base.genome.scaffolds.length <- nchar(base.genome.scaffolds.sequences)
print("--------")
print(base.genome.scaffolds.length)
contigious.draft <- as.character(paste0(base.genome.scaffolds.sequences,collapse = ''))
contigious.draft <- contigious.draft[1]
typeof(contigious.draft)
print(contigious.draft)
print(nchar(contigious.draft))
mutation.indices <- sample(1:nchar(contigious.draft), mutation.numbers)
print(mutation.indices)
for (i in 1:mutation.numbers) {
substr(contigious.draft, mutation.indices[i], mutation.indices[i]) <- mutate(substr(contigious.draft[i], mutation.indices[i], mutation.indices[i]))
}
print(typeof(contigious.draft))
print(length(contigious.draft))
print(">>>contigious")
print(contigious.draft)
generate_scaffolds(contigious.draft, base.genome.scaffolds.length, "DjMutatedScaffold: ",paste0("Mutated_draf_v",draft.vesion),"./Data/Mutation_generation/")
}
mutate_draft(onelinedata, 1, 150, 1)
mutate_draft(onelinedata, 1, 150, 2)
mutate_draft <- function(base.genome, drafts.number, mutation.numbers, draft.vesion){
base.genome <- read.delim("./Data/simulated_scaffolds.txt", sep = "\n", header = FALSE)
base.genome.scaffolds <- as.character(base.genome$V1)
base.genome.scaffolds.headers <- base.genome.scaffolds[grep(">",base.genome.scaffolds)]
base.genome.scaffolds.sequences <- base.genome.scaffolds[-grep(">",base.genome.scaffolds)]
base.genome.scaffolds.length <- nchar(base.genome.scaffolds.sequences)
print("--------")
print(base.genome.scaffolds.length)
contigious.draft <- as.character(paste0(base.genome.scaffolds.sequences,collapse = ''))
# contigious.draft <- contigious.draft[1]
typeof(contigious.draft)
print(contigious.draft)
print(nchar(contigious.draft))
mutation.indices <- sample(1:nchar(contigious.draft), mutation.numbers)
print(mutation.indices)
for (i in 1:mutation.numbers) {
substr(contigious.draft, mutation.indices[i], mutation.indices[i]) <- mutate(substr(contigious.draft[i], mutation.indices[i], mutation.indices[i]))
}
generate_scaffolds(contigious.draft, base.genome.scaffolds.length, "DjMutatedScaffold: ",paste0("Mutated_draf_v",draft.vesion) ,"./Data/Mutation_generation/")
}
mutate_draft(onelinedata, 1, 150, 3)
generate_scaffolds <- function(draft.genome, scaffolds.length, scaffold.header, draft.name, draft.path){
scaffolds.number <- length(scaffolds.length)
start.index <- 0
print(paste0("number of scaffolds: ",scaffolds.number))
for(i in 1:scaffolds.number){
end.index <- start.index + scaffolds.length[i]
print(paste0(scaffold.header,i," > ",start.index,":",end.index))
scaff <- substr(draft.genome, start.index, end.index)
index.str <- paste0(">",scaffold.header,i)
print("***")
print(nchar(paste(index.str,scaff,sep = '\n')))
if(i==1)
write.table(paste(index.str,scaff,sep = '\n'), paste0(draft.path, draft.name,".txt"), append = FALSE,sep = '/n',col.names=FALSE,row.names=FALSE,quote = FALSE)
else
write.table(paste(index.str,scaff,sep = '\n'), paste0(draft.path, draft.name,".txt"), append = TRUE,sep = '/n',col.names=FALSE,row.names=FALSE, quote = FALSE)
start.index <- (end.index+1)
}
write.table(scaffolds.length, paste0(draft.path, draft.name,"_scaff_lenght",".txt"), append = TRUE,sep = '/n',col.names=FALSE,row.names=FALSE, quote = FALSE)
}
mutate_draft <- function(base.genome, drafts.number, mutation.numbers, draft.vesion){
base.genome <- read.delim("./Data/simulated_scaffolds.txt", sep = "\n", header = FALSE)
base.genome.scaffolds <- as.character(base.genome$V1)
base.genome.scaffolds.headers <- base.genome.scaffolds[grep(">",base.genome.scaffolds)]
base.genome.scaffolds.sequences <- base.genome.scaffolds[-grep(">",base.genome.scaffolds)]
base.genome.scaffolds.length <- nchar(base.genome.scaffolds.sequences)
print("--------")
print(base.genome.scaffolds.length)
contigious.draft <- as.character(paste0(base.genome.scaffolds.sequences,collapse = ''))
# contigious.draft <- contigious.draft[1]
typeof(contigious.draft)
print(contigious.draft)
print(nchar(contigious.draft))
mutation.indices <- sample(1:nchar(contigious.draft), mutation.numbers)
print(mutation.indices)
for (i in 1:mutation.numbers) {
substr(contigious.draft, mutation.indices[i], mutation.indices[i]) <- mutate(substr(contigious.draft[i], mutation.indices[i], mutation.indices[i]))
}
generate_scaffolds(contigious.draft, base.genome.scaffolds.length, "DjMutatedScaffold: ",paste0("Mutated_draf_v",draft.vesion) ,"./Data/Mutation_generation/")
}
mutate_draft(onelinedata, 1, 150, 4)
base.genome
base.genome <- read.delim("./Data/simulated_scaffolds.txt", sep = "\n", header = FALSE)
base.genome
as.character(base.genome$V1)[-grep(">",base.genome$V1)]
as.character(base.genome$V1)[-grep(">",base.genome$V1)][1]
base.genome <- read.delim("./Data/simulated_scaffolds.txt", sep = "\n", header = FALSE)
mutate_draft <- function(base.genome, mutation.rate, version.number){
mutation.count <- mutation.rate * nchar(base.genome)
base.genome.scaffolds <- as.character(base.genome$V1)
base.genome.scaffolds.headers <- base.genome.scaffolds[grep(">",base.genome.scaffolds)]
base.genome.scaffolds.sequences <- base.genome.scaffolds[-grep(">",base.genome.scaffolds)]
base.genome.scaffolds.length <- nchar(base.genome.scaffolds.sequences)
print("--------")
print(base.genome.scaffolds.length)
contigious.draft <- paste0(base.genome.scaffolds.sequences,collapse = '')
# print(contigious.draft)
# print(nchar(contigious.draft))
mutation.indices <- sample(1:nchar(contigious.draft), mutation.count)
print("These indice are chosen randomly to be Mutated")
print(mutation.indices)
for (i in 1:mutation.count) {
substr(contigious.draft, mutation.indices[i], mutation.indices[i]) <- mutate(substr(contigious.draft, mutation.indices[i], mutation.indices[i]))
}
generate_scaffolds(contigious.draft,
base.genome.scaffolds.length,
"DjMutatedScaffold: ",
paste0("Mutated_draf_v", version.number),
"./Data/Mutated_drafts/")
}
mutate_draft <- function(base.genome, mutation.rate, version.number){
mutation.count <- mutation.rate * nchar(base.genome)
base.genome.scaffolds <- as.character(base.genome$V1)
base.genome.scaffolds.headers <- base.genome.scaffolds[grep(">",base.genome.scaffolds)]
base.genome.scaffolds.sequences <- base.genome.scaffolds[-grep(">",base.genome.scaffolds)]
base.genome.scaffolds.length <- nchar(base.genome.scaffolds.sequences)
print("--------")
print(base.genome.scaffolds.length)
contigious.draft <- paste0(base.genome.scaffolds.sequences,collapse = '')
# print(contigious.draft)
# print(nchar(contigious.draft))
mutation.indices <- sample(1:nchar(contigious.draft), mutation.count)
print("These indice are chosen randomly to be Mutated")
print(mutation.indices)
for (i in 1:mutation.count) {
substr(contigious.draft, mutation.indices[i], mutation.indices[i]) <- mutate(substr(contigious.draft, mutation.indices[i], mutation.indices[i]))
}
generate_scaffolds(contigious.draft,
base.genome.scaffolds.length,
"DjMutatedScaffold: ",
paste0("Mutated_draf_v", version.number),
"./Data/Mutated_drafts/")
}
mutate_draft(base.genome, 0.1, 1)
getwd)
getwd()
mutate_draft(base.genome, 0.1, 1)
